<?xml version="1.0" encoding="utf-8"?>
<s:Panel 
	width="100%" 
	height="100%"
	title="{resourceManager.getString('editShoeView','edit.shoe.title')}"
	creationComplete="creationCompleteHandler()"
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:controller="dk.runtrack.controller.*"
	xmlns:comp="dk.runtrack.view.components.*" 	
	>

	<fx:Metadata>
		[ResourceBundle("editShoeView")]
	</fx:Metadata>

	<fx:Declarations>
		<controller:PresentationModelLocator id="presentationModelLocator" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.DataGridEventReason;
			import mx.events.DataGridEvent;
			import dk.runtrack.presentationmodels.ShoeDataGridViewItem;
			import mx.managers.PopUpManager;
			import dk.runtrack.presentationmodels.EditShoePresentationModel;
			import dk.runtrack.model.TypeResolver;
			import dk.runtrack.controller.PresentationModelLocator;
			import dk.runtrack.presentationmodels.interfaces.IEditShoePresentationModel;
			import dk.runtrack.model.Shoe;
			
			[Bindable]
			private var _shoeViewModel:IEditShoePresentationModel;
			
			
			private function closeHandler() : void
			{
				_shoeViewModel.save();
				PopUpManager.removePopUp(this);			   
			}
			
			private function closeButtonClickedHandler() : void
			{
				closeHandler();
			}
			
			private function creationCompleteHandler() : void
			{
				_shoeViewModel =  presentationModelLocator.editShoePresentationModel;
			}
			
            public function processData(event:DataGridEvent):void 
            {
                if (event.reason == DataGridEventReason.CANCELLED)
                {
                    return;
                }           
                shoeDataGrid.dataProvider.itemUpdated(event.itemRenderer.data);
             }           

	
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout paddingLeft="20" paddingRight="20" paddingTop="10" paddingBottom="10" />
	</s:layout>
	
	<s:VGroup 
		id="outerVBox"
		height="100%"
		width="100%">
		<s:VGroup height="100%" width="100%">
			<mx:DataGrid
				id="shoeDataGrid"
				 width="100%" 
				 height="100%"
				 dataProvider="{_shoeViewModel.athleteShoes}" 
				 editable="true"
				 selectedIndex="{_shoeViewModel.selectedIndex}"
				 change="{_shoeViewModel.selectedIndex=shoeDataGrid.selectedIndex;deleteButton.enabled=_shoeViewModel.canDeleteSelected; }"
				 allowMultipleSelection="false"
				 itemEditEnd="processData(event)"
				 >
				<mx:columns>
					<mx:DataGridColumn 
						id="nameColumn" 
						headerText="{resourceManager.getString('editShoeView', 'shoe.name')}" 
						dataField="name" 
						/>
					<mx:DataGridColumn 
						id="distanceTravelledColumn" 
						textAlign="right"
						sortCompareFunction="{ShoeDataGridViewItem.compareDistanceTravelled}"
						headerText="{resourceManager.getString('editShoeView', 'shoe.distancetravelled')}" 
						dataField="distanceTravelled" 
						editable="false"
						/>
					<mx:DataGridColumn 
						id="durabilityColumn" 
						headerText="{resourceManager.getString('editShoeView', 'shoe.durability')}"
						sortCompareFunction="{ShoeDataGridViewItem.compareDurability}" 
						textAlign="right"
						dataField="durability" 
						itemEditor="dk.runtrack.view.components.EditShoeDurability"
						/>
					<mx:DataGridColumn 
						id="otherUsageColumn" 
						headerText="{resourceManager.getString('editShoeView', 'shoe.otherusage')}" 
						textAlign="right"
						dataField="otherUsage" 
						itemEditor="dk.runtrack.view.components.EditShoeOtherUsage"
						/>
					<mx:DataGridColumn 
						id="restDurabilityColumn" 
						editable="false"
						headerText="{resourceManager.getString('editShoeView', 'shoe.rest.durability')}"
						sortCompareFunction="{ShoeDataGridViewItem.compareRestDurability}" 
						textAlign="right"
						dataField="restDurability" 
						/>
					<mx:DataGridColumn 
						id="activeColumn" 
						headerText="{resourceManager.getString('editShoeView', 'shoe.active')}"
						textAlign="right"
						dataField="active"
						rendererIsEditor="true"
						itemRenderer="mx.controls.CheckBox" 
						editorDataField="selected"
						/>
					
				</mx:columns>
			</mx:DataGrid>
		</s:VGroup>
		<s:Line width="100%">
			<s:stroke>
				<s:SolidColorStroke weight="1" color="black" />
			</s:stroke>
		</s:Line>
		<s:HGroup width="100%" id="hbox1">
			<s:CheckBox 
				id="showRemovedShoesCheckBox" 
				label="{resourceManager.getString('editShoeView', 'show.removed.shoes')}" 
				selected="{_shoeViewModel.showInActiveShoes}"
				change="{_shoeViewModel.showInActiveShoes=showRemovedShoesCheckBox.selected}"
				/>
			<s:Button 
				label="+" 
				click="{_shoeViewModel.addShoe()}" />
			<s:Button 
				id="deleteButton"
				label="-" 
				click="{_shoeViewModel.deleteSelected()}" />
		</s:HGroup>	
	</s:VGroup>
	
	
	<s:controlBarContent>
		<mx:Spacer width="100%" id="spacer1"/>
		<s:Button label="{resourceManager.getString('editShoeView', 'close')}" id="closeDialogButton" click="closeButtonClickedHandler()" />
	</s:controlBarContent>

	
</s:Panel>
