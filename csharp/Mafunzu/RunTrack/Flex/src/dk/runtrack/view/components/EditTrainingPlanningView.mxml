<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:controller="dk.runtrack.controller.*"
	xmlns:components="dk.runtrack.view.components.*" 	
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	width="100%" 
	height="100%"
	creationComplete="trainingPlanView_creationCompleteHandler(event)"
	>
	<fx:Metadata>
		[ResourceBundle("editTrainingPlanningView")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import dk.runtrack.model.Constants;
			import dk.runtrack.model.TrainingPlan;
			import dk.runtrack.presentationmodels.interfaces.IEditTrainingPlanPresentationModel;
			import dk.runtrack.skins.RtHSliderSkin;
			
			import mx.events.FlexEvent;
			
			[Bindable]
			private var _editTrainingPlanPresentationModel : IEditTrainingPlanPresentationModel;
			
			protected function trainingPlanView_creationCompleteHandler(event:FlexEvent):void
			{
				_editTrainingPlanPresentationModel = presentationModelLocator.editTrainingPlanPresentationModel;
			}
			
			private function trainingPlansLabelFunction(item:Object) : String
			{
				var plan : TrainingPlan = TrainingPlan(item);
				if(TrainingPlan.isNullTrainingPlan(plan))
				{
					return Constants.NULL_ITEM_TEXT;
				}
				return plan.ID.toString();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<controller:PresentationModelLocator id="presentationModelLocator" />
	</fx:Declarations>
	
	<mx:HDividedBox width="100%" height="100%" dividerThickness="10">
		<s:VGroup>
			<s:DropDownList
				id="trainingPlansDropDownList"
				requireSelection="true"
				dataProvider="{_editTrainingPlanPresentationModel.trainingPlans}"
				labelFunction="trainingPlansLabelFunction"
				selectedIndex="{_editTrainingPlanPresentationModel.selectedIndex}"
				change="{_editTrainingPlanPresentationModel.selectedIndex=trainingPlansDropDownList.selectedIndex}"
				/>
			<s:Label text="{resourceManager.getString('editTrainingPlanningView','my.goal.kilometers')}" />
			<s:HGroup>
				<components:NumberTextInput 
					id="goalKilometersText" 
					text="{_editTrainingPlanPresentationModel.goalKilometers}"
					change="{ _editTrainingPlanPresentationModel.goalKilometers=goalKilometersText.text}"
					/>
				<s:Label text="{resourceManager.getString('editTrainingPlanningView','kilometers')}" />
			</s:HGroup>
			<s:Label text="{resourceManager.getString('editTrainingPlanningView','start.ability.kilometers')}" />
			<s:HGroup>
				<components:NumberTextInput 
					id="startDistanceText" 
					text="{_editTrainingPlanPresentationModel.startDistance}"
					change="{ _editTrainingPlanPresentationModel.startDistance=startDistanceText.text}"
					/>
				<s:Label text="{resourceManager.getString('editTrainingPlanningView','kilometers')}" />	
				<mx:DateField  id="startDateDateField"  
							   data="{_editTrainingPlanPresentationModel.start}"
							   change="{_editTrainingPlanPresentationModel.start = event.newDate}"
							   width="200" 
							   />
				<s:Label text="{resourceManager.getString('editTrainingPlanningView','start.date')}" />	
			</s:HGroup>
			<s:Label text="{resourceManager.getString('editTrainingPlanningView','training.workload')}" />
			<s:HGroup>
				<s:Label text="-" />
				<s:HSlider 
					skinClass="dk.runtrack.skins.RtHSliderSkin"
					id="workloadSlider"
					maximum="100" 
					width="260"
					value="{_editTrainingPlanPresentationModel.workload}"
					valueCommit="{_editTrainingPlanPresentationModel.workload=workloadSlider.value}"
					/>
				<s:Label text="+" />	
			</s:HGroup>
			<components:Weekdays id="weekDays"
								 preferredWeekdays="{_editTrainingPlanPresentationModel.preferredWeekdays}" 
								 valueCommit="{_editTrainingPlanPresentationModel.preferredWeekdays=weekDays.preferredWeekdays}"		
								 />
			<s:Button 
				id="saveButton" 
				click="{_editTrainingPlanPresentationModel.save()}" 
				label="{resourceManager.getString('editTrainingPlanningView','save')}" />
			
			
		</s:VGroup>
		<components:RunChart width="100%" height="100%" />
	</mx:HDividedBox>

</s:SkinnableContainer>
