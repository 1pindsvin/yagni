<?xml version="1.0" encoding="utf-8"?>
<s:Button 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	width="100%"
	height="100%"
	minWidth="10"
	maxHeight="100"
	
	color.competition="#1CEF4E" 
	color.training="#1E42DB"
	color.combinedTraningAndCompetition="#F3EB0A"

	preinitialize="dayButton_preinitializeHandler(event)"
	>
	
	
	<fx:Script>
		<![CDATA[
			import dk.runtrack.model.Constants;
			import dk.runtrack.presentationmodels.DayCellPresenter;
			import dk.runtrack.presentationmodels.interfaces.IDayCellPresenter;
			
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.events.FlexEvent;
			

			
			[Bindable]
			private var _dayCellPresenter : IDayCellPresenter = new DayCellPresenter();

			private function get activityCount():int
			{
				return _activityCount;
			}

			public function set activityCount(value:int):void
			{
				_activityCount = value;
				currentState = _activityCount > 0 ? "training" : "noTrainingActivity"; 
			}

			public function get dayCellPresenter():IDayCellPresenter
			{
				return _dayCellPresenter;
			}

			public function set dayCellPresenter(value:IDayCellPresenter):void
			{
				_dayCellPresenter = value;
			}

			[Bindable]
			private var _activityCount : int;
			
			
			protected function dayButton_preinitializeHandler(event:FlexEvent):void
			{
				BindingUtils.bindProperty(this, "content", dayCellPresenter, "day");
				BindingUtils.bindProperty(this, "activityCount", dayCellPresenter, "activityCount");
			}

		]]>
		
	</fx:Script>
	<s:states>
		<s:State name="noTrainingActivity"/>
		<s:State name="competition"/>
		<s:State name="training"/>
		<s:State name="combinedTraningAndCompetition"/>
	</s:states>
	
</s:Button>
